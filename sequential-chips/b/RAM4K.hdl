/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Loading - select the correct RAM512 module from the 3 MSB of address
    DMux8Way(in=load,sel=address[9..11],a=load1,b=load2,c=load3,d=load4,e=load5,f=load6,g=load7,h=load8);
    
    // 8 RAM512 modules
    RAM512(in=in,out=out1,load=load1,address=address[0..8]);
    RAM512(in=in,out=out2,load=load2,address=address[0..8]);
    RAM512(in=in,out=out3,load=load3,address=address[0..8]);
    RAM512(in=in,out=out4,load=load4,address=address[0..8]);
    RAM512(in=in,out=out5,load=load5,address=address[0..8]);
    RAM512(in=in,out=out6,load=load6,address=address[0..8]);
    RAM512(in=in,out=out7,load=load7,address=address[0..8]);
    RAM512(in=in,out=out8,load=load8,address=address[0..8]);

    // Output according to the 3 MSB of address
    Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=address[9..11],out=out);
}
