class Player {

    field Square position;
    field Array treasures;
    
    constructor Player new(Square startPosition) {
        let position = startPosition;
        let treasures = Array.new(6);
        return this;
    }

    method Square getPosition() {
        return position;
    }
    
    method void writeOutTreasures() {
        var int i;
        var Treasure curTreasure;
        
        do Output.printString("Treasures: ");
        let i = 0;
        while (i < 6) {
            let curTreasure = treasures[i];
            if (~(curTreasure = null)){
                do Output.printString(curTreasure.getName());
                do Output.printString("; ");
            }
            let i = i + 1;
        }
        return;
    }
    
    method void takeTurn() {
        var char key;
        var char choice;
        var Castle castle;
        
        // Display current location details
        do Screen.clearScreen();
        do Output.moveCursor(0, 0);
        let castle = position.getCastle();
        if (castle = null) {
            // TODO path graphic
            do Output.printString("Location: ");
            do Output.printString("On a dark desert highway...");
        }
        if (~(castle = null)) {
            // TODO castle graphic
            do Output.printString("Location: ");
            do Output.printString(castle.getName());
        }
        
        do Output.moveCursor(15, 0);
        do Output.printString("----------------------------------------------------------------");
        // write out current player's treasure stash
        do writeOutTreasures();
        
        // write out available directions
        do Output.moveCursor(18, 0);
        do Output.printString("Possible directions: ");
        if (~(position.getNorth() = null)){
            do Output.printString("N ");
        }
        if (~(position.getEast() = null)){
            do Output.printString("E ");
        }
        if (~(position.getSouth() = null)){
            do Output.printString("S ");
        }
        if (~(position.getWest() = null)){
            do Output.printString("W ");
        }
        
        // ask player to choose a direction until they input something sensible
        while (true) {
            do Output.moveCursor(20, 19);
            do Output.printString("Choose a direction:");
            let key = Keyboard.readChar();
            
            if (key = 78) {
                if (~(position.getNorth() = null)) {
                    let position = position.getNorth();
                    return;
                }
            }
            if (key = 69) {
                if (~(position.getEast() = null)) {
                    let position = position.getEast();
                    return;
                }
            }
            if (key = 83) {
                if (~(position.getSouth() = null)) {
                    let position = position.getSouth();
                    return;
                }
            }
            if (key = 87) {
                if (~(position.getWest() = null)) {
                    let position = position.getWest();
                    return;
                }
            }
            
            do Output.moveCursor(22, 0);
            do Output.printString("Please enter a valid option!");
        }
        
        return;
    }
}
