class Game {

    // Game tile squares
    field Array squares;

    /** Constructs a new Game. */
    constructor Game new() {
        var Square curSquare;
        var int i;
        
        // set up map:
        let squares = Array.new(9);    
        let i = 0;
        while (i < 9) {
            let squares[i] = Square.new();
            let i = i + 1;
        }
        let curSquare = squares[0];
        do curSquare.setNorth(squares[1]);
        let curSquare = squares[1];
        do curSquare.setNorth(squares[2]);
        let curSquare = squares[2];
        do curSquare.setNorth(squares[3]);
        let curSquare = squares[3];
        do curSquare.setEast(squares[4]);
        let curSquare = squares[4];
        do curSquare.setEast(squares[5]);
        let curSquare = squares[5];
        do curSquare.setSouth(squares[6]);
        let curSquare = squares[6];
        do curSquare.setSouth(squares[7]);
        let curSquare = squares[7];
        do curSquare.setWest(squares[8]);
        let curSquare = squares[8];
        do curSquare.setWest(squares[1]);
        
        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do squares.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Starts the game. Handles inputs from the user that control
     *  the square's movement, direction and size. */
    method void run() {
        var char key;
        var boolean exit;

        let exit = false;

        while (~exit) {
            // waits for a key to be pressed.
            while (key = 0) {
                let key = Keyboard.keyPressed();
            }

            let exit = true;

            // waits for the key to be released.
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
            }
        }
            
        return;
	}
}
