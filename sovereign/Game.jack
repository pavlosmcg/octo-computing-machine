class Game {

    // Game tile squares
    field Array squares;
    field Array castles;
    field Array treasures;

    /** Constructs a new Game. */
    constructor Game new() {
        var Square curSquare;
        
        // set up map:
        let squares = Array.new(9);    
        let castles = Array.new(3);
        let treasures = Array.new(3);
        
        let treasures[0] = Treasure.new("The Key to the Kingdom");
        let treasures[1] = Treasure.new("The Ring of Power");
        let treasures[2] = Treasure.new("The Runesword");
        
        let castles[0] = Castle.new("The Demon Castle", treasures[0]);
        let castles[1] = Castle.new("The Island Fortress", treasures[2]);
        let castles[2] = Castle.new("The Evil Tower", treasures[1]);
        
        let squares[0] = Square.new(null);
        let squares[1] = Square.new(null);
        let squares[2] = Square.new(null);
        let squares[3] = Square.new(castles[2]);
        let squares[4] = Square.new(null);
        let squares[5] = Square.new(castles[0]);
        let squares[6] = Square.new(null);
        let squares[7] = Square.new(castles[1]);
        let squares[8] = Square.new(null);

        let curSquare = squares[0];
        do curSquare.setNorth(squares[1]);
        let curSquare = squares[1];
        do curSquare.setNorth(squares[2]);
        let curSquare = squares[2];
        do curSquare.setNorth(squares[3]);
        let curSquare = squares[3];
        do curSquare.setEast(squares[4]);
        let curSquare = squares[4];
        do curSquare.setEast(squares[5]);
        let curSquare = squares[5];
        do curSquare.setSouth(squares[6]);
        let curSquare = squares[6];
        do curSquare.setSouth(squares[7]);
        let curSquare = squares[7];
        do curSquare.setWest(squares[8]);
        let curSquare = squares[8];
        do curSquare.setWest(squares[1]);
        
        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do squares.dispose();
        do castles.dispose();
        do treasures.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        var Player me;
        var int roll;
        var Square position;
        var boolean completed;
        var TreasureList treasureList;
        
        let completed = false;
        let me = Player.new(squares[0]);
        
        while (~(completed)){
            
            // roll the die
            do Screen.clearScreen();
            do Output.moveCursor(19, 15);
            let roll = Move.roll();
            while (roll > 0) {
            
                // show current position and clear the screen
                let position = me.getPosition();
                do position.showDetails(); 
                
                // draw the player info box 
                do Screen.drawRectangle(0, 158, 511, 160);
                do Screen.drawRectangle(0, 162, 511, 164);
            
                // write out moves remaining
                do Output.moveCursor(15, 0);
                do Output.printString("Moves remaining: ");
                do Output.printInt(roll);
                
                // ask the player for some input
                do me.doMove();
                let roll = roll -1;
                
                // when you've got back to the start:
                if (me.getPosition() = squares[0]) {
                    let treasureList = me.getTreasureList();
                    if (treasureList.containsKeyToKingdom(treasures[0]) = true) { //doesn't work - TODO fix this
                        do Screen.clearScreen();
                        do Output.moveCursor(0,0);
                        do Output.printString("You escaped the kingdom with the key!");
                        do Output.println();
                        do Output.printString("The Supreme Custodian will has now locked the door and the magic entrance has become invisible to mortal eyes.");
                        do Output.printString("Anyone still inside will be left to wander the kingdom forever!");
                        let completed = true;
                    }
                }
            }
        }

        return;
	}
}
